name: CI Pipeline with Docker Hub

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  AWS_REGION: ap-northeast-2
  ECR_REPOSITORY: conik-ecr  # ECR 리포지토리 이름으로 변경

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 1. 리포지토리 체크아웃
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. application.yml 파일 생성
      - name: Create application.yml
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.APPLICATION_YML }}" > ./src/main/resources/application.yml
          echo "${{ secrets.APPLICATION_YML_CLOUD }}" > ./src/main/resources/application-cloud.yml
          echo "${{ secrets.APPLICATION_YML_SWAGGER }}" > ./src/main/resources/application-swagger.yml
          echo "${{ secrets.APPLICATION_YML_ACTUATOR }}" > ./src/main/resources/application-actuator.yml 
          echo "${{ secrets.APPLICATION_YML_EMAIL }}" > ./src/main/resources/application-email.yml 

      # 3. AWS 자격 증명 설정
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # 4. Amazon ECR 로그인 및 이미지 빌드/푸시
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        id: build-and-push
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Docker 이미지 빌드 (deploy 폴더의 Multistage.Dockerfile 사용)
          docker build -f deploy/Multistage.Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker build -f deploy/Multistage.Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          
          # ECR에 푸시
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          
          # 이미지 정보 출력
          echo "Image pushed to $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          echo "Image pushed to $ECR_REGISTRY/$ECR_REPOSITORY:latest"

      # 4. 매니페스트 리포지토리 체크아웃
      - name: Checkout manifest repository
        uses: actions/checkout@v4
        with:
          repository: 'HANIEUMICT/MANIFEST_REPO'  # 매니페스트 리포지토리 이름으로 변경
          token: ${{ secrets.PAT }}  # 또는 개인 액세스 토큰 사용
          path: 'manifest'

      # 5. deployment.yml 파일 업데이트
      - name: Update deployment.yml
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # 새 이미지 태그로 deployment.yml 업데이트
          sed -i "s|image: .*|image: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG|g" manifest/conik/deployment.yml
          
          # 변경사항 확인
          echo "Updated deployment.yml:"
          cat manifest/conik/deployment.yml

      # 6. 변경사항 커밋 및 푸시
      - name: Commit and push changes
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          cd manifest
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add conik/deployment.yml
          git commit -m "Update image tag to $IMAGE_TAG" || exit 0
          git push
